<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>1998</title>
    <link>https://nocturover.github.io/</link>
    <description>Recent content on 1998</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Oct 2021 16:15:34 +0900</lastBuildDate><atom:link href="https://nocturover.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>01_기록의_의미</title>
      <link>https://nocturover.github.io/insight/01_%EA%B8%B0%EB%A1%9D%EC%9D%98_%EC%9D%98%EB%AF%B8/</link>
      <pubDate>Sun, 17 Oct 2021 16:15:34 +0900</pubDate>
      
      <guid>https://nocturover.github.io/insight/01_%EA%B8%B0%EB%A1%9D%EC%9D%98_%EC%9D%98%EB%AF%B8/</guid>
      <description>Overview 기록이란 완결성을 지닌다.
문장을 작성하기 위해서 추상적으로만 상상하던 내용의 보다 세심한 구체화가 요구되는 작업이다. 하여 작업의 결과물이 도출되었을 때는 추상적 이미지의 한계성을 다시금 상기시켜주는 영향도 미친다.
내가 기록을 시작한 것은 복잡한 생각들에 대한 정리가 필요할 때, 내려놓는다는 행위를 취함으로써 일부 부담을 절하하려는 목적이 강했었다.
기록을 하기와 그만두기를 반복하며 얻었던 각 개별 장점에 대해서 기술해보고자 한다.
Features 1. Advantage  기억공간 확장 재귀성 이해도
역시 빼놓을 수 없는 기록의 장점은 기억공간의 확장이다.</description>
    </item>
    
    <item>
      <title>00_CRLF_TROUBLE</title>
      <link>https://nocturover.github.io/git/hugo/00_crlf_trouble/</link>
      <pubDate>Sun, 17 Oct 2021 16:03:46 +0900</pubDate>
      
      <guid>https://nocturover.github.io/git/hugo/00_crlf_trouble/</guid>
      <description> 1. Trouble  CRLF ERR clone / push 등의 단계에서 CRLF(Carriage Return Line Feed)와 관련된 트러블이 발생한다.
 2. Shooting  git config --global core.autocrlf true 각 계정에 remote add로 등록된 해당 레퍼지토리의 config 를 변경함으로써 해결가능하다.
 3. Summary  Reference
CRLF 차이점과 해결법
</description>
    </item>
    
    <item>
      <title>00_Custom_Theme</title>
      <link>https://nocturover.github.io/go/hugo/00_custom_theme/</link>
      <pubDate>Sat, 16 Oct 2021 17:05:46 +0900</pubDate>
      
      <guid>https://nocturover.github.io/go/hugo/00_custom_theme/</guid>
      <description>Overview  hugo를 이용하여 생성된 static site 는
git submodule add ~.git themes/~~ 커맨드를 이용하여 적재한 테마 파일의 모든 레이아웃을 따르게 되어있다.
 1. 개념  기본 레이아웃을 변경시키기 위해서는 원본 테마 폴더 내에 존재하는 layouts의 각 html을 수정해주거나 overriding을 위해 상위 폴더에 layouts를 생성하여 각 필요한 html을 수정해주는 방법이 존재한다.
 2. 적용범위  a. 사이트 상태 반환 hugo는 Go 언어와 html의 조합을 이용하여 동적인 코드 조합이 가능하기 때문에 이 사이트 좌측 메뉴바에서 볼 수 있듯 각 Section에 포함된 게시글의 전체개수를 반환하여 string 형태로 접미어에 붙이는 것도 가능하다.</description>
    </item>
    
  </channel>
</rss>
